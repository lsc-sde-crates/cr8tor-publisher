name: Microservice Build and Push

on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io

jobs:
  get-changed-services:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      services: ${{ steps.service-filter.outputs.changes }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
       token: ${{ secrets.GITHUB_TOKEN }}

    - uses: dorny/paths-filter@v3
      id: service-filter
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        base: main
        filters: |
          metadata-service: 
            - 'metadata-service/**'
          approval-service:
            - 'approval-service/**'
          publish-service:
            - 'publish-service/**'

  build-and-push:
    if: ${{ needs.get-changed-services.outputs.services != '[]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    needs: get-changed-services

    strategy:
      matrix:
        service: ${{ fromJSON(needs.get-changed-services.outputs.services) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.service }}

      - name: Build and push service image to ghcr
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.service }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}